package Controllers;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.Image;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;

public class HeaderFooterPageEvent extends PdfPageEventHelper {

    String header;
    String footer;
    String user;
    String role;
    String dateTime;
    int maxPage;
    Image img;
    

    HeaderFooterPageEvent(String header, String footer, String user, String role, String dateTime, double maxPage) {
        this.header = header;
        this.footer = footer;
        this.user = user;
        this.role = role;
        this.dateTime = dateTime;
        this.maxPage = (int) maxPage;
    }

    @Override
    public void onStartPage(PdfWriter writer, Document document) {
        Rectangle rect = writer.getBoxSize("art");
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase(header + " - " + footer), rect.getLeft() + 220, rect.getTop() - 35, 0);
    }

    @Override
    public void onEndPage(PdfWriter writer, Document document) {
        Rectangle rect = writer.getBoxSize("art");
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Page " + writer.getCurrentPageNumber() + " of " + maxPage), rect.getLeft() + 65, rect.getBottom() + 50, 0);
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Generated by " + user + " - " + role + ": " + dateTime), rect.getLeft() + 205, rect.getBottom() + 30, 0);
    }
}
