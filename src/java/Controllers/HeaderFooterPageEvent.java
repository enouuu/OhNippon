package Controllers;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.Image;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class HeaderFooterPageEvent extends PdfPageEventHelper {

    String header = "OhNippon";
    String footer = "Coded by Ang, Carpio, Feliciano, Gonzales, and Mendoza.";
    String user;
    String role;
    String dateTime;
    int maxPage;
    Image img;
    

    HeaderFooterPageEvent(String user, String role, String dateTime, double maxPage) {
        try {
            this.img = Image.getInstance("OhNipponTextB.png");
        } catch (BadElementException ex) {
            Logger.getLogger(HeaderFooterPageEvent.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(HeaderFooterPageEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.user = user;
        this.role = role;
        this.dateTime = dateTime;
        this.maxPage = (int) maxPage;
    }

    @Override
    public void onStartPage(PdfWriter writer, Document document) {
        Rectangle rect = writer.getBoxSize("art");
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase(header + " - " + footer), rect.getLeft() + 220, rect.getTop() - 35, 0);
    }

    @Override
    public void onEndPage(PdfWriter writer, Document document) {
        Rectangle rect = writer.getBoxSize("art");
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Page " + writer.getCurrentPageNumber() + " of " + maxPage), rect.getLeft() + 65, rect.getBottom() + 50, 0);
        ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Generated by " + user + " - " + role + ": " + dateTime), rect.getLeft() + 205, rect.getBottom() + 30, 0);

        /*try {
            PdfContentByte byte1 = writer.getDirectContent();
            PdfTemplate tp1 = byte1.createTemplate(0, 0);
            //img.scaleToFit(100, 100);
            //img.setAbsolutePosition(0, 0);
            tp1.addImage(img);
            byte1.addTemplate(tp1, 0, 0);
            //writer.getDirectContent().addImage(img);
        } catch (Exception x) {
            x.printStackTrace();
        }*/
    }
}
